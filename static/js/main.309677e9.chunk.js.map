{"version":3,"sources":["component/Input/index.tsx","component/Preview/index.tsx","component/Palette/index.tsx","component/SaveButton/index.tsx","App.tsx","index.tsx"],"names":["cx","classnames","bind","styles","Input","_ref","handleInputChange","react_default","a","createElement","className","concat","name","type","placeholder","onChange","Preview","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","canvasRef","createRef","setFont","canvas","text","args","ctx","getContext","color","size","font","fillStyle","textAlign","textBaseline","drawText","defaultWidth","width","defaultHeight","height","lines","split","length","map","line","index","middle","h","fillText","mid","reduce","prev","curr","subtract","push","_ref2","slicedToArray","sign","offset","fontHeight","current","_this$props","fontSize","backgroundColor","href","handleCanvasChange","fillRect","url","toDataURL","_this$props2","ref","Component","Palette","paletteBox","handleColorChange","palette","style","onClick","SaveButton","download","App","state","e","setState","currentTarget","value","_this$state","target","src_component_Preview","src_component_Input","src_component_Palette","component_SaveButton","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.309677e9.chunk.js","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./index.scss\";\n\nconst moduleName = \"Input\";\nconst cx = classnames.bind(styles);\n\ninterface Props {\n  handleInputChange(e: React.FormEvent<HTMLInputElement>): void;\n}\n\nconst Input: React.SFC<Props> = ({ handleInputChange }) => (\n  <div className={cx(`${moduleName}`)}>\n    <input\n      name=\"text\"\n      className={cx(`${moduleName}-input`)}\n      type=\"text\"\n      placeholder=\"Please enter text\"\n      onChange={handleInputChange}\n    />\n  </div>\n);\nexport default Input;\n","import React, { Component, createRef } from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./index.scss\";\n\nconst moduleName = \"Preview\";\nconst cx = classnames.bind(styles);\n\ninterface Props {\n  text: string;\n  color: string;\n  fontSize: string;\n  backgroundColor: string;\n  href: string;\n  handleCanvasChange(href: string): void;\n}\n\nclass Preview extends Component<Props> {\n  canvasRef: any = createRef<HTMLDivElement>();\n\n  constructor(props: Props) {\n    super(props);\n  }\n  componentDidMount() {\n    const canvas: any = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const {\n      text,\n      color,\n      fontSize,\n      backgroundColor,\n      href,\n      handleCanvasChange\n    } = this.props;\n\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    this.setFont(canvas, text, {\n      color: \"white\",\n      size: fontSize\n    });\n    this.drawText(canvas, text);\n\n    const url = canvas.toDataURL();\n    href !== url && handleCanvasChange(url);\n  }\n  componentDidUpdate() {\n    const canvas: any = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const {\n      text,\n      color,\n      fontSize,\n      backgroundColor,\n      href,\n      handleCanvasChange\n    } = this.props;\n\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    this.setFont(canvas, text, {\n      color: \"white\",\n      size: fontSize\n    });\n    this.drawText(canvas, text);\n\n    const url = canvas.toDataURL();\n    href !== url && handleCanvasChange(url);\n  }\n\n  setFont = (canvas: any, text: string, args: any) => {\n    const ctx = canvas.getContext(\"2d\");\n    const { color, size } = args;\n    ctx.font = `${size} SE Pro`;\n    ctx.fillStyle = color;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n  };\n\n  drawText = (canvas: any, text: string): void => {\n    const ctx = canvas.getContext(\"2d\");\n    const defaultWidth = canvas.width / 2;\n    const defaultHeight = canvas.height / 2;\n    const fontHeight = 24 * 10;\n    const SEPARATOR = \"\\\\n\";\n    const lines: string[] = text.split(SEPARATOR);\n\n    if (lines.length % 2) {\n      lines.map((line: string, index: number) => {\n        const middle = lines.length / 2;\n        const h = defaultHeight + (index - middle);\n        ctx.fillText(line, defaultWidth, h);\n        return null;\n      });\n    } else {\n      const mid = (lines.length - 1) / 2;\n      const offsets: Array<any> = lines\n        .map((line, index) => index)\n        .reduce((prev: Array<Object>, curr) => {\n          const subtract = curr - mid;\n          prev.push([subtract < 0, subtract]);\n          return prev;\n        }, []);\n      offsets.map(([sign, offset], index: number) => {\n        const position = offset * fontHeight;\n        const e = sign ? (fontHeight / 2) * -1 : fontHeight / 2;\n        const h = defaultHeight + position + e;\n        ctx.fillText(lines[index], defaultWidth, h);\n        return null;\n      });\n    }\n  };\n  render() {\n    return (\n      <div className={cx(`${moduleName}`)}>\n        <canvas\n          className={cx(`${moduleName}-container`)}\n          ref={this.canvasRef}\n          width=\"800px\"\n          height=\"400px\"\n        />\n      </div>\n    );\n  }\n}\nexport default Preview;\n","import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styled from \"styled-components\";\nimport styles from \"./index.scss\";\nconst moduleName = \"PaletteBox\";\nconst cx = classnames.bind(styles);\n\n// const Li = styled.li`\n// :hover {\n//     color: ${palette.color};\n//   }\n// `\n/** @type {{hover: React.CSSProperties}} */\n\ninterface Props {\n  paletteBox: Array<{ color: string; name: string }>;\n  handleColorChange(color: string): void;\n}\n\nconst Palette: React.SFC<Props> = ({ paletteBox, handleColorChange }) => (\n  <div className={cx(`${moduleName}`)}>\n    <ul className={cx(`${moduleName}-wrap`)}>\n      {paletteBox.map(palette => (\n        <li className={cx(`${moduleName}-palettes`)}>\n          <div\n            className={cx(`${moduleName}-palette`)}\n            style={{\n              color: \"#868e96\"\n            }}\n            onClick={() => handleColorChange(palette.color)}\n          >\n            <span\n              className={cx(`${moduleName}-palette-box`)}\n              style={{ backgroundColor: palette.color }}\n            />\n            {palette.name}\n          </div>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Palette;\n","import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./styles.scss\";\n\nconst moduleName = \"SaveButton\";\nconst cx = classnames.bind(styles);\n\ninterface Props {\n  href: string;\n  backgroundColor: string;\n}\n\nconst SaveButton: React.SFC<Props> = ({ href, backgroundColor }) => (\n  <div className={cx(`${moduleName}`)}>\n    <a\n      href={href}\n      download=\"banner-image.png\"\n      className={cx(`${moduleName}-button`)}\n      style={{ backgroundColor: `${backgroundColor}` }}\n    >\n      SAVE ME!\n    </a>\n  </div>\n);\n\nexport default SaveButton;\n","import React, { Component } from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./App.scss\";\n\nimport Input from \"./component/Input\";\nimport Preview from \"./component/Preview\";\nimport Palette from \"./component/Palette\";\nimport SaveButton from \"./component/SaveButton\";\n\nconst moduleName = \"App\";\nconst cx = classnames.bind(styles);\n\ninterface Props {}\n\ninterface State {\n  text: string;\n  href: string;\n  color: string;\n  fontSize: string;\n  backgroundColor: string;\n  paletteBox: Array<{ color: string; name: string }>;\n}\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    text: \"SAMPLE TEXT\",\n    href: \"\",\n    color: \"white\",\n    fontSize: \"24px\",\n    backgroundColor: \"#4263EB\",\n    paletteBox: [\n      { color: \"#495057\", name: \"GRAY\" },\n      { color: \"#AE3EC8\", name: \"GRAPE\" },\n      { color: \"#1C7ED5\", name: \"BLUE\" },\n      { color: \"#36B24D\", name: \"GREEN\" },\n      { color: \"#F76706\", name: \"ORANGE\" },\n      { color: \"#F03D3F\", name: \"RED\" },\n      { color: \"#7048E7\", name: \"VIOLET\" },\n      { color: \"#0F98AD\", name: \"CYAN\" },\n      { color: \"#D6326C\", name: \"PINK\" },\n      { color: \"#4263EB\", name: \"INDIGO\" },\n      { color: \"#0DA678\", name: \"TEAL\" },\n      { color: \"#F59F01\", name: \"YELLOW\" },\n      { color: \"#F7E017\", name: \"JAVASCRIPT\" },\n      { color: \"#007ACC\", name: \"TYPESCRIPT\" },\n      { color: \"#81D8F7\", name: \"REACT\" },\n      { color: \"#00BD7D\", name: \"VUE\" }\n    ]\n  };\n\n  handleInputChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    this.setState({\n      text: e.currentTarget.value\n    });\n  };\n\n  handleColorChange = (color: string): void => {\n    this.setState({\n      backgroundColor: color\n    });\n  };\n\n  handleCanvasChange = (href: string): void => {\n    this.setState({\n      href: href\n    });\n  };\n  render() {\n    const {\n      text,\n      color,\n      fontSize,\n      backgroundColor,\n      paletteBox,\n      href\n    } = this.state;\n    return (\n      <div className={cx(`${moduleName}`)}>\n        <div className={cx(`${moduleName}-titleBox`)}>\n          <p className={cx(`${moduleName}-title`)}>Marcus Banner is an</p>\n          <p className={cx(`${moduleName}-subTitle`)}>\n            easy way to create banner images for blogs\n          </p>\n          <p className={cx(`${moduleName}-name`)}>Made by. MARCUS</p>\n          <a\n            className={cx(`${moduleName}-github`)}\n            href={`https://github.com/Jogeonsang/blog-banner-generator`}\n            target=\"blank\"\n          >\n            Github\n          </a>\n        </div>\n        <Preview\n          text={text}\n          color={color}\n          fontSize={fontSize}\n          backgroundColor={backgroundColor}\n          handleCanvasChange={this.handleCanvasChange}\n          href={href}\n        />\n        <Input handleInputChange={this.handleInputChange} />\n        <Palette\n          paletteBox={paletteBox}\n          handleColorChange={this.handleColorChange}\n        />\n        <SaveButton href={href} backgroundColor={backgroundColor} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}